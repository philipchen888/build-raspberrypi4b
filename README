This is to build sdcard image for Raspberrypi4b:

Parts needed:
1. Raspberry pi 4B.
2. Sandisk 64GB SATA SSD with USB cable.
3. Sandisk 64GB micro sdcard.
4. Host PC with ubuntu 22 and 24.

Note: If keyboard/mouse USB dongle interfere with USB SATA SSD, put keyboard/mouse USB dongle in USB3 socket with USB extension cord.

Note: Compile debian and ubuntu-jammy using host PC with ubuntu 22 (amd64 jammy).
      Compile ubuntu-noble and ubuntu-oracular using host PC with ubuntu 24 (amd64 noble).
      Compile ubuntu-noble and ubuntu-oracular using lb version 3.0~a57-1.
      Compile debian and ubuntu-jammy using lb version 20230502.

Steps to build raspberrypi4b sdcard image:

1. git clone https://github.com/philipchen888/build-raspberrypi4b.git
   sudo apt-get install build-essential git libssl-dev nmap net-tools libncurses5-dev libncursesw5-dev dnsutils vsftpd ftp binfmt-support qemu-user-static scons libncurses5-dev libncursesw5-dev libdbus-glib-1-dev libbluetooth-dev python-setuptools python3-dev python3-pip python3-setuptools libcurl4-openssl-dev gettext dbus-x11 chrpath diffstat gawk texinfo curl flex bison device-tree-compiler swig libmpc-dev debootstrap debhelper kpartx gdisk devscripts isolinux po4a libgnutls28-dev mtools python-is-python3
   pip install pyelftools

2. Install cross compiler and live-build:
   wget https://releases.linaro.org/components/toolchain/binaries/latest-7/aarch64-linux-gnu/gcc-linaro-7.5.0-2019.12-x86_64_aarch64-linux-gnu.tar.xz
   sudo tar xvf gcc-linaro-7.5.0-2019.12-x86_64_aarch64-linux-gnu.tar.xz  -C /usr/local/
   wget https://releases.linaro.org/components/toolchain/binaries/latest-7/arm-linux-gnueabihf/gcc-linaro-7.5.0-2019.12-x86_64_arm-linux-gnueabihf.tar.xz
   sudo tar xvf gcc-linaro-7.5.0-2019.12-x86_64_arm-linux-gnueabihf.tar.xz -C /usr/local/
   wget https://developer.arm.com/-/media/Files/downloads/gnu/13.3.rel1/binrel/arm-gnu-toolchain-13.3.rel1-x86_64-aarch64-none-linux-gnu.tar.xz
   sudo tar -xJf arm-gnu-toolchain-13.3.rel1-x86_64-aarch64-none-linux-gnu.tar.xz -C /usr/local/

   sudo apt-get install debootstrap debhelper kpartx gdisk devscripts dh-systemd isolinux po4a

   For ubuntu-noble and ubuntu-oracular
   wget http://security.ubuntu.com/ubuntu/pool/main/l/live-build/live-build_3.0~a57-1ubuntu41.22.04.1_all.deb
   sudo dpkg -i live-build_3.0~a57-1ubuntu41.22.04.1_all.deb
   lb --version ( 3.0~a57-1 /usr/bin/lb )

   For debian and ubuntu-jammy:
   wget https://launchpad.net/debian/+archive/primary/+sourcefiles/live-build/1:20230502/live-build_20230502.tar.xz
   tar xvf live-build_20230502.tar.xz
   cd live-build
   vi Makefile ( search Installing manpages, delete from after done before uninstall: )
   sudo make install

   linux-firmware is in:
   git clone https://git.kernel.org/pub/scm/linux/kernel/git/firmware/linux-firmware.git --depth=1

   To boot from USB, some early versions of raspberry pi 4B need to update bootloader:
   See https://pimylifeup.com/raspberry-pi-bootloader/
   Plugin sdcard to PC.
   sudo apt install rpi-imager
   rpi-imager ( burn bootloader to sdcard )
   choose OS -> misc-utility -> bootloader pi4 -> usb boot -> choose storage -> sdcard -> write -> yes
   Plugin sdcard to rpi4b and boot. When monitor display green it's done. Power off rpi4b.

3. cd ~/build-raspberrypi4b/kernel ( Compile vendor's kernel )
   git clone https://github.com/raspberrypi/linux --depth=1 -b rpi-5.4.y
   cp bcm2711_defconfig ./linux/arch/arm/configs/
   cd linux; mkdir tmp; cd tmp; mkdir lib;
   cd ../../; mkdir out;

   make kernel
   The result is in ./out/boot.img

4. cd ~/build-raspberrypi4b/linux  ( Compile mainline kernel )
   git clone https://github.com/raspberrypi/linux --depth=1 -b rpi-6.6.y
   vi ./linux/arch/arm/configs/bcm2711_defconfig ( change CONFIG_I2C_CHARDEV=m to CONFIG_I2C_CHARDEV=y )
   cd linux; mkdir tmp; cd tmp; mkdir lib;
   cd ../../; mkdir out;

   make kernel
   The result is in ./out/boot.img

5. cd ~/build-raspberrypi4b/uboot
   git clone --depth=1 --branch=1.20230106 https://github.com/raspberrypi/firmware.git
   git clone --depth=1 --branch=v2023.01 https://source.denx.de/u-boot/u-boot.git

   \rm -rf out; mkdir out;
   make u-boot

   The result is in ./u-boot/u-boot.bin

   make boot          ( The result is in ./out/boot.img  bootusb.img)

6. cd ~/build-raspberrypi4b/rootfs-bullseye  ( Compile debian bullseye rootfs )
   make rootfs        ( has desktop )
   The result is in ./linaro-rootfs.img
   make clean

7. cd ~/build-raspberrypi4b/rootfs-bookworm  ( Compile debian bookworm rootfs )
   make rootfs        ( has desktop )
   The result is in ./linaro-rootfs.img
   make clean

8. cd ~/build-raspberrypi4b/rootfs-ubuntu-jammy  ( Compile debian ubuntu-jammy rootfs )
   make rootfs
   The result is in ./linaro-rootfs.img
   make clean

9. cd ~/build-raspberrypi4b/bullseye-gnome  ( Build debian bullseye gnome-desktop image )
   Plugin sdcard/USB2-SATA-SSD to PC.
   sudo ./mksdcardimg.sh   ( sudo ./mkusbimg.sh for USB2-SATA-SSD )
   Eject sdcard/USB2-SATA-SSD from PC.

10. cd ~/build-raspberrypi4b/bookworm-gnome  ( Build debian bookworm gnome-desktop image )
    Plugin sdcard/USB2-SATA-SSD to PC.
    sudo ./mksdcardimg.sh   ( sudo ./mkusbimg.sh for USB2-SATA-SSD )
    Eject sdcard/USB2-SATA-SSD from PC.

11. cd ~/build-raspberrypi4b/ubuntu-jammy  ( Build ubuntu-jammy image )
    Plugin sdcard/USB2-SATA-SSD to PC.
    sudo ./mksdcardimg.sh   ( sudo ./mkusbimg.sh for USB2-SATA-SSD )
    Eject sdcard/USB2-SATA-SSD from PC.

12. cd ~/build-raspberrypi4b/yocto  ( Build yocto image )

13. cd ~/build-raspberrypi4b/yocto-lxde  ( Build yocto lxde-desktop image )

14. cd ~/build-raspberrypi4b/yocto-xfce  ( Build yocto xfce-desktop image )

15. cd ~/build-raspberrypi4b/buildroot   ( Build buildroot image )

16. cd ~/build-raspberrypi4b/android     ( Build android image )

17. cd ~/build-raspberrypi4b/bullseye-gpio  ( gpio test in bullseye-lxde )

18. cd ~/build-raspberrypi4b/bullseye-pn532nfc  ( pn532nfc test in bullseye-lxde )

19. cd ~/build-raspberrypi4b/bullseye-flightaware  ( flightaware in bullseye-lxde ) 

20. cd ~/build-raspberrypi4b/baremetal-gpio  ( gpio test in baremetal )

21. cd ~/build-raspberrypi4b/bookworm-uefi   ( Build bookworm-uefi image )

22. cd ~/build-raspberrypi4b/fedora          ( Build fedora image )

23. cd ~/build-raspberrypi4b/ubuntu-uefi     ( Build ubuntu-uefi image )
