This is to build sdcard image for Raspberrypi4b:

Parts needed:
1. Raspberry pi 4B.
2. Sandisk 64GB SATA SSD with USB cable. ( I tried M.2 NVMe SSD with USB but failed. The M.2 NVMe SSD interfere with wifi and keyboard / mouse. Also M.2 NVMe SSD become slow when running OS using USB interface. We should use PCIE insterface for M.2 NVMe SSD running OS)
3. Host PC with ubuntu 22.

Steps to build raspberrypi4b sdcard image:

1. git clone https://github.com/philipchen888/build-raspberrypi4b.git
   sudo apt-get install build-essential git libssl-dev nmap net-tools libncurses5-dev libncursesw5-dev dnsutils vsftpd ftp binfmt-support qemu-user-static scons libncurses5-dev libncursesw5-dev libdbus-glib-1-dev libbluetooth-dev python-setuptools python3-dev python3-pip python3-setuptools libcurl4-openssl-dev gettext dbus-x11 chrpath diffstat gawk texinfo curl flex bison device-tree-compiler swig libmpc-dev debootstrap debhelper kpartx gdisk devscripts isolinux po4a libgnutls28-dev mtools python-is-python3
   pip install pyelftools

2. Install cross compiler and live-build:
   wget https://releases.linaro.org/components/toolchain/binaries/latest-7/aarch64-linux-gnu/gcc-linaro-7.5.0-2019.12-x86_64_aarch64-linux-gnu.tar.xz
   sudo tar xvf gcc-linaro-7.5.0-2019.12-x86_64_aarch64-linux-gnu.tar.xz  -C /usr/local/
   wget https://releases.linaro.org/components/toolchain/binaries/latest-7/arm-linux-gnueabihf/gcc-linaro-7.5.0-2019.12-x86_64_arm-linux-gnueabihf.tar.xz
   sudo tar xvf gcc-linaro-7.5.0-2019.12-x86_64_arm-linux-gnueabihf.tar.xz -C /usr/local/
   sudo apt-get install debootstrap debhelper kpartx gdisk devscripts dh-systemd isolinux po4a
   wget https://launchpad.net/debian/+archive/primary/+sourcefiles/live-build/1:20230502/live-build_20230502.tar.xz
   tar xvf live-build_20230502.tar.xz
   cd live-build
   vi Makefile ( search Installing manpages, delete from after done before uninstall: )
   sudo make install

   linux-firmware is in:
   git clone https://git.kernel.org/pub/scm/linux/kernel/git/firmware/linux-firmware.git --depth=1

   To boot from USB, some early versions of raspberry pi 4B need to update bootloader:
   See https://pimylifeup.com/raspberry-pi-bootloader/
   Plugin sdcard to PC.
   sudo apt install rpi-imager
   rpi-imager ( burn bootloader to sdcard )
   choose OS -> misc-utility -> bootloader pi4 -> usb boot -> choose storage -> sdcard -> write -> yes
   Plugin sdcard to rpi4b and boot. When monitor display green it's done. Power off rpi4b.

3. cd ~/build-raspberrypi4b/kernel ( Compile vendor's kernel )
   git clone https://github.com/raspberrypi/linux --depth=1 -b rpi-5.4.y
   cp bcm2711_defconfig ./linux/arch/arm/configs/
   cd linux; mkdir tmp; cd tmp; mkdir lib;
   cd ../../; mkdir out;

   make kernel
   The result is in ./out/boot.img

4. cd ~/build-raspberrypi4b/linux  ( Compile mainline kernel )
   git clone https://github.com/raspberrypi/linux --depth=1 -b rpi-6.6.y
   vi ./linux/arch/arm/configs/bcm2711_defconfig ( change CONFIG_I2C_CHARDEV=m to CONFIG_I2C_CHARDEV=y )
   cd linux; mkdir tmp; cd tmp; mkdir lib;
   cd ../../; mkdir out;

   make kernel
   The result is in ./out/boot.img

5. cd ~/build-raspberrypi4b/uboot
   git clone --depth=1 --branch=1.20230106 https://github.com/raspberrypi/firmware.git
   git clone --depth=1 --branch=v2023.01 https://source.denx.de/u-boot/u-boot.git

   \rm -rf out; mkdir out;
   make u-boot

   The result is in ./u-boot/u-boot.bin

   make boot          ( The result is in ./out/boot.img )

6. cd ~/build-raspberrypi4b/rootfs-buster  ( Compile debian buster rootfs )
   make rootfs        ( has desktop )
   The result is in ./linaro-rootfs.img

   make basicrootfs   ( no desktop )
   The result is in ./linaro-basicrootfs.img
   make clean

7. cd ~/build-raspberrypi4b/rootfs-bullseye  ( Compile debian bullseye rootfs )
   make rootfs        ( has desktop )
   The result is in ./linaro-rootfs.img

   make basicrootfs   ( no desktop )
   The result is in ./linaro-basicrootfs.img
   make clean

8. cd ~/build-raspberrypi4b/rootfs-bookworm  ( Compile debian bookworm rootfs )
   make rootfs        ( has desktop )
   The result is in ./linaro-rootfs.img

   make basicrootfs   ( no desktop )
   The result is in ./linaro-basicrootfs.img
   make clean

9. cd ~/build-raspberrypi4b/rootfs-ubuntu-focal  ( Compile debian ubuntu-focal rootfs )
   make rootfs
   The result is in ./linaro-rootfs.img
   make clean

10. cd ~/build-raspberrypi4b/rootfs-ubuntu-jammy  ( Compile debian ubuntu-jammy rootfs )
    make rootfs
    The result is in ./linaro-rootfs.img
    make clean

11. cd ~/build-raspberrypi4b/buster-lxde  ( Build debian buster lxde-desktop image )
    Note: Buster uses kernel rpi-5.4.y which doesn't support uboot.
    ./mksdcardimg.sh
    The result is in sdcard.img

12. cd ~/build-raspberrypi4b/buster-xfce-kde-gnome ( Build buster xfce-kde-gnome desktop image )
    Note: Buster uses kernel rpi-5.4.y which doesn't support uboot.
    ./mksdcardimg.sh
    The result is in sdcard.img

13. cd ~/build-raspberrypi4b/bullseye-lxde  ( Build debian bullseye lxde-desktop image )
    ./mksdcardimg.sh
    The result is in sdcard.img

14. cd ~/build-raspberrypi4b/bullseye-xfce-kde-gnome ( Build bullseye xfce-kde-gnome desktop image )
    ./mksdcardimg.sh
    The result is in sdcard.img

15. cd ~/build-raspberrypi4b/bookworm-lxde  ( Build debian bookworm lxde-desktop image )
    ./mksdcardimg.sh
    The result is in sdcard.img

16. cd ~/build-raspberrypi4b/bookworm-xfce-kde-gnome ( Build bookworm xfce-kde-gnome desktop image )
    ./mksdcardimg.sh
    The result is in sdcard.img

17. cd ~/build-raspberrypi4b/ubuntu-focal  ( Build ubuntu-focal image )
    ./mksdcardimg.sh
    The result is in sdcard.img

18. cd ~/build-raspberrypi4b/ubuntu-jammy  ( Build ubuntu-jammy image )
    ./mksdcardimg.sh
    The result is in sdcard.img

19. cd ~/build-raspberrypi4b/yocto  ( Build yocto image )

20. cd ~/build-raspberrypi4b/yocto-lxde  ( Build yocto lxde-desktop image )

21. cd ~/build-raspberrypi4b/yocto-xfce  ( Build yocto xfce-desktop image )

22. cd ~/build-raspberrypi4b/buildroot   ( Build buildroot image )

23. cd ~/build-raspberrypi4b/android     ( Build android image )

24. cd ~/build-raspberrypi4b/bullseye-gpio  ( gpio test in bullseye-lxde )

25. cd ~/build-raspberrypi4b/bullseye-pn532nfc  ( pn532nfc test in bullseye-lxde )

26. cd ~/build-raspberrypi4b/bullseye-flightaware  ( flightaware in bullseye-lxde ) 

27. cd ~/build-raspberrypi4b/baremetal-gpio  ( gpio test in baremetal )

28. cd ~/build-raspberrypi4b/bookworm-uefi   ( Build bookworm-uefi image )

29. cd ~/build-raspberrypi4b/fedora          ( Build fedora image )

30. cd ~/build-raspberrypi4b/ubuntu-uefi     ( Build ubuntu-uefi image )
